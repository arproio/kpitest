<?xml version="1.0" encoding="UTF-8" standalone="no"?><Entities build="b46" majorVersion="8" minorVersion="0" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1000"><ThingTemplates><ThingTemplate baseThingTemplate="RemoteThingWithTunnelsAndFileTransfer" description="New Thing Template for KPI'​s using Value Stream&#10;" documentationContent="" effectiveThingPackage="RemoteThingWithTunnelsAndFileTransfer" homeMashup="" lastModifiedDate="2017-10-27T19:56:40.751Z" name="TT_VS_RTTFT_VR86001X" projectName="CogniPro" tags="cogniProTag:DeshengSimExport" thingPackage="" valueStream="VS_VR8600-1X"><Owner name="Jennifer" type="User"/><avatar/><DesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></DesignTimePermissions><RunTimePermissions/><VisibilityPermissions><Visibility/></VisibilityPermissions><ConfigurationTables><ConfigurationTable description="Tunneling Destinations" isMultiRow="true" name="Tunnels" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="" aspect.friendlyName="Application Path" baseType="STRING" description="Location of the client app that will use this tunnel" name="appUri" ordinal="5"/><FieldDefinition aspect.defaultValue="" aspect.friendlyName="Description" baseType="STRING" description="A description of the tunnel" name="description" ordinal="3"/><FieldDefinition aspect.defaultValue="127.0.0.1" aspect.friendlyName="Host" baseType="STRING" description="Host or IP that this tunnel will connect to at the edge" name="host" ordinal="1"/><FieldDefinition aspect.defaultValue="vnc" aspect.friendlyName="Name" baseType="STRING" description="Name of the tunnel" name="name" ordinal="0"/><FieldDefinition aspect.defaultValue="1.0" aspect.friendlyName="Number of Connects" baseType="NUMBER" description="The number of connections required to establish this tunnel" name="numConnects" ordinal="4"/><FieldDefinition aspect.defaultValue="5900.0" aspect.friendlyName="Port" baseType="NUMBER" description="Port that this tunnel will connect to at the edge" name="port" ordinal="2"/><FieldDefinition aspect.defaultValue="tcp" aspect.friendlyName="Protocol" baseType="STRING" description="The protocol used over this tunnel" name="proto" ordinal="6"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable description="General Settings" isMultiRow="false" name="TunnelSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Enable Tunneling" aspect.isNullable="true" baseType="BOOLEAN" description="Enable tunneling" name="enableTunneling" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row/></Rows></ConfigurationTable></ConfigurationTables><PropertyBindings/><RemotePropertyBindings/><RemoteServiceBindings/><RemoteEventBindings/><AlertConfigurations><AlertDefinitions name="dataMismatchCount"/><AlertDefinitions name="plcTimeStamp"/><AlertDefinitions name="postgresSensorDaTable"/><AlertDefinitions name="shiftNumber"/><AlertDefinitions name="shiftStrtTime"/></AlertConfigurations><ThingShape><PropertyDefinitions><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeThreshold="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="INTEGER" category="" description="" isLocalOnly="false" name="dataMismatchCount" ordinal="5"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="plcTimeStamp" ordinal="4"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="NEVER" aspect.defaultValue="cognipro.cognipro_vr8600_1x_sensordata" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="true" baseType="STRING" category="" description="" isLocalOnly="false" name="postgresSensorDaTable" ordinal="3"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="shiftNumber" ordinal="1"/><PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="true" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="shiftStrtTime" ordinal="2"/></PropertyDefinitions><ServiceDefinitions><ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="insertDBRecord"><ResultType baseType="NOTHING" description="" name="result" ordinal="0"/><ParameterDefinitions><FieldDefinition baseType="INTEGER" description="" name="alarm_01" ordinal="19"/><FieldDefinition baseType="INTEGER" description="" name="alarm_02" ordinal="20"/><FieldDefinition baseType="INTEGER" description="" name="alarm_03" ordinal="21"/><FieldDefinition baseType="INTEGER" description="" name="alarm_04" ordinal="22"/><FieldDefinition baseType="INTEGER" description="" name="alarm_05" ordinal="23"/><FieldDefinition baseType="INTEGER" description="" name="alarm_06" ordinal="24"/><FieldDefinition baseType="INTEGER" description="" name="alarm_07" ordinal="25"/><FieldDefinition baseType="INTEGER" description="" name="alarm_08" ordinal="26"/><FieldDefinition baseType="INTEGER" description="" name="alarm_09" ordinal="27"/><FieldDefinition baseType="INTEGER" description="" name="alarm_10" ordinal="28"/><FieldDefinition baseType="INTEGER" description="" name="alarm_11" ordinal="29"/><FieldDefinition baseType="INTEGER" description="" name="alarm_12" ordinal="47"/><FieldDefinition baseType="INTEGER" description="" name="alarm_13" ordinal="30"/><FieldDefinition baseType="INTEGER" description="" name="alarm_14" ordinal="31"/><FieldDefinition baseType="INTEGER" description="" name="alarm_15" ordinal="32"/><FieldDefinition baseType="INTEGER" description="" name="alarm_16" ordinal="33"/><FieldDefinition baseType="INTEGER" description="" name="alarm_17" ordinal="34"/><FieldDefinition baseType="INTEGER" description="" name="alarm_18" ordinal="35"/><FieldDefinition baseType="INTEGER" description="" name="alarm_19" ordinal="36"/><FieldDefinition baseType="INTEGER" description="" name="alarm_20" ordinal="37"/><FieldDefinition baseType="INTEGER" description="" name="alarm_21" ordinal="38"/><FieldDefinition baseType="INTEGER" description="" name="alarm_22" ordinal="39"/><FieldDefinition baseType="INTEGER" description="" name="alarm_23" ordinal="40"/><FieldDefinition baseType="INTEGER" description="" name="alarm_24" ordinal="41"/><FieldDefinition baseType="INTEGER" description="" name="alarm_25" ordinal="42"/><FieldDefinition baseType="INTEGER" description="" name="alarm_26" ordinal="43"/><FieldDefinition baseType="INTEGER" description="" name="alarm_27" ordinal="48"/><FieldDefinition baseType="INTEGER" description="" name="alarm_28" ordinal="44"/><FieldDefinition baseType="INTEGER" description="" name="alarm_29" ordinal="45"/><FieldDefinition baseType="INTEGER" description="" name="alarm_30" ordinal="46"/><FieldDefinition baseType="STRING" description="" name="config_780type" ordinal="86"/><FieldDefinition baseType="STRING" description="" name="config_780vsd" ordinal="87"/><FieldDefinition baseType="STRING" description="" name="config_dateinstall" ordinal="89"/><FieldDefinition baseType="STRING" description="" name="config_linenumber" ordinal="88"/><FieldDefinition baseType="STRING" description="" name="config_MCmodel" ordinal="85"/><FieldDefinition baseType="INTEGER" description="" name="config_PDS" ordinal="90"/><FieldDefinition baseType="STRING" description="" name="machineID" ordinal="1"/><FieldDefinition baseType="INTEGER" description="" name="param_chambernumber" ordinal="7"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp01" ordinal="68"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp02" ordinal="69"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp03" ordinal="70"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp04" ordinal="71"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp05" ordinal="72"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp06" ordinal="73"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp07" ordinal="74"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp08" ordinal="75"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp09" ordinal="76"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp10" ordinal="77"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp11" ordinal="78"/><FieldDefinition baseType="INTEGER" description="" name="param_currentp12" ordinal="79"/><FieldDefinition baseType="STRING" description="" name="param_cycletimestamp" ordinal="5"/><FieldDefinition baseType="INTEGER" description="" name="param_flushaverage" ordinal="16"/><FieldDefinition baseType="INTEGER" description="" name="param_flushprevious" ordinal="15"/><FieldDefinition baseType="INTEGER" description="" name="param_flushtotalcycles" ordinal="17"/><FieldDefinition baseType="INTEGER" description="" name="param_lifetimecycles" ordinal="12"/><FieldDefinition baseType="INTEGER" description="" name="param_platennumber" ordinal="6"/><FieldDefinition baseType="INTEGER" description="" name="param_productcount" ordinal="13"/><FieldDefinition baseType="INTEGER" description="" name="param_runhours" ordinal="14"/><FieldDefinition baseType="INTEGER" description="" name="param_sealcurrent" ordinal="9"/><FieldDefinition baseType="INTEGER" description="" name="param_sealexclusion" ordinal="82"/><FieldDefinition baseType="INTEGER" description="" name="param_sealtime" ordinal="11"/><FieldDefinition baseType="INTEGER" description="" name="param_sealvoltage" ordinal="10"/><FieldDefinition baseType="INTEGER" description="" name="param_speedcpm" ordinal="81"/><FieldDefinition baseType="INTEGER" description="" name="param_speedppm" ordinal="80"/><FieldDefinition baseType="INTEGER" description="" name="param_speedPPMlive" ordinal="84"/><FieldDefinition baseType="INTEGER" description="" name="param_switchalarm" ordinal="4"/><FieldDefinition baseType="INTEGER" description="" name="param_switchseal" ordinal="3"/><FieldDefinition baseType="INTEGER" description="" name="param_vac" ordinal="8"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc01" ordinal="61"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc02" ordinal="62"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc03" ordinal="63"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc04" ordinal="64"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc05" ordinal="65"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc06" ordinal="66"/><FieldDefinition baseType="INTEGER" description="" name="param_vacc07" ordinal="67"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp01" ordinal="49"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp02" ordinal="50"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp03" ordinal="51"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp04" ordinal="52"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp05" ordinal="53"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp06" ordinal="54"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp07" ordinal="55"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp08" ordinal="56"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp09" ordinal="57"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp10" ordinal="58"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp11" ordinal="59"/><FieldDefinition baseType="INTEGER" description="" name="param_vacp12" ordinal="60"/><FieldDefinition baseType="STRING" description="" name="plcTimeStamp" ordinal="2"/><FieldDefinition baseType="INTEGER" description="" name="recipe_flushsethours" ordinal="91"/><FieldDefinition baseType="INTEGER" description="" name="state_all" ordinal="18"/><FieldDefinition baseType="INTEGER" description="" name="state_allalarm" ordinal="83"/></ParameterDefinitions></ServiceDefinition></ServiceDefinitions><EventDefinitions/><ServiceMappings/><ServiceImplementations><ServiceImplementation description="" handlerName="Script" name="insertDBRecord"><ConfigurationTables><ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  - insertDB START machineID "+ machineID);
//try {
var currentTime = Date.now();
var calPLCTimestamp = dateFormat(currentTime,"yyyy-MM-dd HH:mm:ss.SSS");
    var shiftNo; 
var shiftNoparams = {
	plcTime: calPLCTimestamp /* STRING */,
	assetID: me.name /* STRING */
};

// result: INFOTABLE
var shiftNoResult= Things["SEE_FC_PostGres_Database"].calculateShiftNo(shiftNoparams);
shiftNo = shiftNoResult.sp_vpp_getshiftnumber;
//    var shiftStartTimeParams = {
//	plcTime: calPLCTimestamp /* STRING */,
//	assetID: me.name /* STRING */,
//	sensorTableName: me.postgresSensorDaTable /* STRING */,
//	shiftNo: shiftNo /* STRING */
//};
//
//// result: INFOTABLE
//var shiftstartTimeResult= Things["SEE_FC_PostGres_Database"].calculateShiftStartTime(shiftStartTimeParams);
//me.shiftStrtTime =shiftstartTimeResult.sp_cognipro_calculate_shift_start_time;
    
   
var params = {
	alarm_26: alarm_26 /* INTEGER */,
	alarm_27: alarm_27 /* INTEGER */,
	alarm_24: alarm_24 /* INTEGER */,
	param_speedPPMlive: param_speedPPMlive /* INTEGER */,
	alarm_25: alarm_25 /* INTEGER */,
	alarm_28: alarm_28 /* INTEGER */,
	alarm_29: alarm_29 /* INTEGER */,
	config_780type: config_780type /* STRING */,
	param_chambernumber: param_chambernumber /* INTEGER */,
	param_lifetimecycles: param_lifetimecycles /* INTEGER */,
	param_switchseal: param_switchseal /* INTEGER */,
	param_vac: param_vac /* INTEGER */,
	alarm_22: alarm_22 /* INTEGER */,
	alarm_23: alarm_23 /* INTEGER */,
	param_currentp12: param_currentp12 /* INTEGER */,
	alarm_20: alarm_20 /* INTEGER */,
	param_currentp11: param_currentp11 /* INTEGER */,
	alarm_21: alarm_21 /* INTEGER */,
	param_currentp10: param_currentp10 /* INTEGER */,
	alarm_15: alarm_15 /* INTEGER */,
	alarm_16: alarm_16 /* INTEGER */,
	alarm_13: alarm_13 /* INTEGER */,
	alarm_14: alarm_14 /* INTEGER */,
	alarm_19: alarm_19 /* INTEGER */,
	param_currentp09: param_currentp09 /* INTEGER */,
	alarm_17: alarm_17 /* INTEGER */,
	param_currentp08: param_currentp08 /* INTEGER */,
	alarm_18: alarm_18 /* INTEGER */,
	param_currentp07: param_currentp07 /* INTEGER */,
	state_allalarm: state_allalarm /* INTEGER */,
	param_speedppm: param_speedppm /* INTEGER */,
	param_sealexclusion: param_sealexclusion /* INTEGER */,
	param_platennumber: param_platennumber /* INTEGER */,
	param_vacc06: param_vacc06 /* INTEGER */,
	param_vacc05: param_vacc05 /* INTEGER */,
	param_vacc04: param_vacc04 /* INTEGER */,
	param_vacc03: param_vacc03 /* INTEGER */,
	param_flushaverage: param_flushaverage /* INTEGER */,
	param_vacc07: param_vacc07 /* INTEGER */,
	param_currentp06: param_currentp06 /* INTEGER */,
	param_currentp05: param_currentp05 /* INTEGER */,
	param_currentp04: param_currentp04 /* INTEGER */,
	param_currentp03: param_currentp03 /* INTEGER */,
	alarm_11: alarm_11 /* INTEGER */,
	param_currentp02: param_currentp02 /* INTEGER */,
	alarm_12: alarm_12 /* INTEGER */,
	param_currentp01: param_currentp01 /* INTEGER */,
	param_cycletimestamp: param_cycletimestamp /* STRING */,
	alarm_10: alarm_10 /* INTEGER */,
	alarm_04: alarm_04 /* INTEGER */,
	alarm_05: alarm_05 /* INTEGER */,
	alarm_02: alarm_02 /* INTEGER */,
	alarm_03: alarm_03 /* INTEGER */,
	state_all: state_all /* INTEGER */,
	alarm_08: alarm_08 /* INTEGER */,
	alarm_09: alarm_09 /* INTEGER */,
	alarm_06: alarm_06 /* INTEGER */,
	alarm_07: alarm_07 /* INTEGER */,
	config_dateinstall: config_dateinstall /* STRING */,
	param_flushprevious: param_flushprevious /* INTEGER */,
	param_vacc02: param_vacc02 /* INTEGER */,
	param_vacc01: param_vacc01 /* INTEGER */,
	config_780vsd: config_780vsd /* STRING */,
	param_sealvoltage: param_sealvoltage /* INTEGER */,
	machineID: machineID /* STRING */,
	alarm_01: alarm_01 /* INTEGER */,
	param_vacp10: param_vacp10 /* INTEGER */,
	plcTimeStamp: calPLCTimestamp /* STRING */,
	param_vacp11: param_vacp11 /* INTEGER */,
	config_MCmodel: config_MCmodel /* STRING */,
	param_vacp12: param_vacp12 /* INTEGER */,
	recipe_flushsethours: recipe_flushsethours /* INTEGER */,
	param_switchalarm: param_switchalarm /* INTEGER */,
	param_vacp06: param_vacp06 /* INTEGER */,
	param_vacp07: param_vacp07 /* INTEGER */,
	param_vacp08: param_vacp08 /* INTEGER */,
	param_vacp09: param_vacp09 /* INTEGER */,
	param_runhours: param_runhours /* INTEGER */,
	config_linenumber: config_linenumber /* INTEGER */,
	param_sealcurrent: param_sealcurrent /* INTEGER */,
	config_PDS: config_PDS /* INTEGER */,
	param_productcount: param_productcount /* INTEGER */,
	param_flushtotalcycles: param_flushtotalcycles /* INTEGER */,
	param_vacp02: param_vacp02 /* INTEGER */,
	alarm_30: alarm_30 /* INTEGER */,
	param_vacp03: param_vacp03 /* INTEGER */,
	param_sealtime: param_sealtime /* INTEGER */,
	param_vacp04: param_vacp04 /* INTEGER */,
	param_vacp05: param_vacp05 /* INTEGER */,
	param_speedcpm: param_speedcpm /* INTEGER */,
	param_vacp01: param_vacp01 /* INTEGER */,
    shiftNo: shiftNo,
    shiftStTime:null
};
//    me.plcTimeStamp =calPLCTimestamp;
//logger.debug("TT_RTTFT_8600-1X  - "+ me.name+" 1X insertDB shiftNo "+ me.shiftNumber);
//logger.debug("TT_RTTFT_8600-1X - "+ me.name+" 1X insertDB shiftStTime "+ me.shiftStTime);
// result: INFOTABLE
 Things["SEE_FC_PostGres_Database"].insertVR86001xRemoteMachinesDataPOC(params);
//me.shiftNumber=shiftNo;
//} catch(err) {
//logger.error("TT_RTTFT_8600-1X - insertDB Error "+err);
//    }
logger.debug("TT_RTTFT_8600-1X  - insertDB END machineID "+ machineID);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></ServiceImplementations><Subscriptions><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_01"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_01"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_01 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_01 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_01 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_02"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_02"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_02 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_02 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_02 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_03"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_03"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_03 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_03 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_03 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_04"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_04"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_04 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_04 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_04 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_05"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_05"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_05 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_05 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_05 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_06"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_06"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_06 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_06 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_06 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_07"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_07"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_07 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_07 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_07 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_08"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_08"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_08 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_08 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_08 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_09"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_09"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_09 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_09 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_09 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_10"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_10"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_10 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_10 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_10 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_11"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_11"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_11 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_11 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_11 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_12"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_12"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_12 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_12 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_12 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_13"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_13"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_13 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_13 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_13 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_14"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_14"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_14 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_14 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_14 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_15"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_15"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_15 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_15 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_15 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_16"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_16"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_16 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_16 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_16 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_17"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_17"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_17 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_17 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_17 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_18"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_18"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_18 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_18 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_18 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_19"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_19"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_13 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_19 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_19 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_20"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_20"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_20 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_20 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_20 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_21"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_21"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_21 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_21 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_21 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_22"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_22"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_22 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_22 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_22 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_23"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_23"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_23 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_23 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_23 - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_24"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_24"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_24 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_24 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_24 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_25"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_25"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_25 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_25 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_25 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_26"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_26"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_26 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_26 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_26 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_27"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_27"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_13 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_27 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_27 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_28"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_28"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_28 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_28 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_28 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_29"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_29"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_29 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_29 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_29 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="alarm_30"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.alarm_30"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for alarm_30 - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_30 - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for alarm_30 - END "+name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="param_lifetimecycles"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.param_lifetimecycles"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for param_lifetimecycles - START "+me.name);

try{
    var eventData = eventData.newValue.value;
    var meData = me.param_lifetimecycles;

    if(eventData !=meData){
        //logger.error(" IF Name TT 8600 1X Name  Data mismatch: "+me.name);
        me.dataMismatchCount = me.dataMismatchCount +1;
    }
    else{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: me.name/* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        me.insertDBRecord(params);
    }

}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for param_lifetimecycles - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for param_lifetimecycles - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="shiftNumber"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.shiftNumber"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TTFT_8600-1X - ShiftNo change subscription START "+me.name);
try {
if(eventData.oldValue.value!='' && eventData.oldValue.value!=undefined){
var params = {
	assetID: me.name /* STRING */,
	par_current_shift: eventData.newValue.value /* STRING */,
	par_shift_start_time: me.shiftStrtTime /* STRING */,
	par_last_shift: eventData.oldValue.value /* STRING */
};
// result: INFOTABLE
   logger.debug("1X Shift no : "+ me.name  + " par_current_shift  " + eventData.newValue.value  + " par_shift_start_time "+ me.shiftStrtTime+ " par_last_shift " + eventData.oldValue.value)
var result = Things["SEE_FC_PostGres_Database"].calculateKPIbyShift_POC(params);
}

    
} catch(err) {
logger.error("TTFT_8600-1X - ShiftNo change subscription Error "+err +" "+me.name);
}

logger.debug("TTFT_8600-1X - ShiftNo change subscription END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="state_all"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.state_all"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for state_all - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for state_all - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for state_all - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="DataChange" source="" sourceProperty="state_allalarm"><ServiceImplementation description="" handlerName="Script" name="Event.DataChange:Property.state_allalarm"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  Data Change subscription for state_allalarm - START "+me.name);

try{
        var tmpResult = me.GetPropertyValues();
        var calPLCTimestamp=tmpResult.param_cycledatestamp+" "+tmpResult.param_cycletimestamp;
        
        var params = {
            alarm_26: tmpResult.alarm_26 /* INTEGER */,
            alarm_27: tmpResult.alarm_27 /* INTEGER */,
            alarm_24: tmpResult.alarm_24 /* INTEGER */,
            alarm_25: tmpResult.alarm_25 /* INTEGER */,
            alarm_28: tmpResult.alarm_28 /* INTEGER */,
            alarm_29: tmpResult.alarm_29 /* INTEGER */,
            param_chambernumber: tmpResult.param_chambernumber /* INTEGER */,
            param_lifetimecycles: tmpResult.param_lifetimecycles /* INTEGER */,
            param_switchseal: tmpResult.param_switchseal /* INTEGER */,
            param_vac: tmpResult.param_vac /* INTEGER */,
            alarm_22: tmpResult.alarm_22 /* INTEGER */,
            alarm_23: tmpResult.alarm_23 /* INTEGER */,
            param_currentp12: tmpResult.param_currentP12 /* INTEGER */,
            alarm_20: tmpResult.alarm_20 /* INTEGER */,
            param_currentp11: tmpResult.param_currentP11 /* INTEGER */,
            alarm_21: tmpResult.alarm_21 /* INTEGER */,
            param_currentp10: tmpResult.param_currentP10 /* INTEGER */,
            alarm_15: tmpResult.alarm_15 /* INTEGER */,
            alarm_16: tmpResult.alarm_16 /* INTEGER */,
            alarm_13: tmpResult.alarm_13 /* INTEGER */,
            alarm_14: tmpResult.alarm_14 /* INTEGER */,
            alarm_19: tmpResult.alarm_19 /* INTEGER */,
            param_currentp09: tmpResult.param_currentP09 /* INTEGER */,
            alarm_17: tmpResult.alarm_17 /* INTEGER */,
            param_currentp08: tmpResult.param_currentP08 /* INTEGER */,
            alarm_18: tmpResult.alarm_18 /* INTEGER */,
            param_currentp07: tmpResult.param_currentP07 /* INTEGER */,
            param_platennumber: tmpResult.param_platennumber /* INTEGER */,
            param_vacc06: tmpResult.param_vacC06 /* INTEGER */,
            param_vacc05: tmpResult.param_vacC05 /* INTEGER */,
            param_vacc04: tmpResult.param_vacC04 /* INTEGER */,
            param_vacc03: tmpResult.param_vacC03 /* INTEGER */,
            param_flushaverage: tmpResult.param_flushaverage /* INTEGER */,
            param_vacc07: tmpResult.param_vacC07 /* INTEGER */,
            param_currentp06: tmpResult.param_currentP06 /* INTEGER */,
            param_currentp05: tmpResult.param_currentP05 /* INTEGER */,
            param_currentp04: tmpResult.param_currentP04 /* INTEGER */,
            param_currentp03: tmpResult.param_currentP03 /* INTEGER */,
            alarm_11: tmpResult.alarm_11 /* INTEGER */,
            param_currentp02: tmpResult.param_currentP02 /* INTEGER */,
            alarm_12: tmpResult.alarm_12 /* INTEGER */,
            param_currentp01: tmpResult.param_currentP01 /* INTEGER */,
            param_cycletimestamp: calPLCTimestamp /* STRING */,
            alarm_10: tmpResult.alarm_10 /* INTEGER */,
            alarm_04: tmpResult.alarm_04 /* INTEGER */,
            alarm_05: tmpResult.alarm_05 /* INTEGER */,
            alarm_02: tmpResult.alarm_02 /* INTEGER */,
            state_all: tmpResult.state_all /* INTEGER */,
            alarm_03: tmpResult.alarm_03 /* INTEGER */,
            alarm_08: tmpResult.alarm_08 /* INTEGER */,
            alarm_09: tmpResult.alarm_09 /* INTEGER */,
            alarm_06: tmpResult.alarm_06 /* INTEGER */,
            alarm_07: tmpResult.alarm_07 /* INTEGER */,
            param_flushprevious: tmpResult.param_flushprevious /* INTEGER */,
            param_vacc02: tmpResult.param_vacC02 /* INTEGER */,
            param_vacc01: tmpResult.param_vacC01 /* INTEGER */,
            param_sealvoltage: tmpResult.param_sealvoltage /* INTEGER */,
            machineID: tmpResult.name /* STRING */,
            plcTimeStamp: calPLCTimestamp /* STRING */,
            alarm_01: tmpResult.alarm_01 /* INTEGER */,
            param_vacp10: tmpResult.param_vacP10 /* INTEGER */,
            param_vacp11: tmpResult.param_vacP12 /* INTEGER */,
            param_vacp12: tmpResult.param_vacP12 /* INTEGER */,
            param_switchalarm: tmpResult.param_switchalarm /* INTEGER */,
            param_vacp06: tmpResult.param_vacP06 /* INTEGER */,
            param_vacp07: tmpResult.param_vacP07 /* INTEGER */,
            param_vacp08: tmpResult.param_vacP08 /* INTEGER */,
            param_vacp09: tmpResult.param_vacP09 /* INTEGER */,
            param_runhours: tmpResult.param_runhours /* INTEGER */,
            param_sealcurrent: tmpResult.param_sealcurrent /* INTEGER */,
            param_productcount: tmpResult.param_productcount /* INTEGER */,
            param_flushtotalcycles: tmpResult.param_flushtotalcycles /* INTEGER */,
            param_vacp02: tmpResult.param_vacP02 /* INTEGER */,
            alarm_30: tmpResult.alarm_30 /* INTEGER */,
            param_vacp03: tmpResult.param_vacP03 /* INTEGER */,
            param_sealtime: tmpResult.param_sealtime /* INTEGER */,
            param_vacp04: tmpResult.param_vacP04 /* INTEGER */,
            param_vacp05: tmpResult.param_vacP05 /* INTEGER */,
            param_vacp01: tmpResult.param_vacP01 /* INTEGER */,
            param_speedppm: tmpResult.param_speedPPM,
            param_speedcpm:tmpResult.param_speedCPM,
            param_sealexclusion:tmpResult.param_sealexclusion,
            state_allalarm :tmpResult.state_allalarm,
            param_speedPPMlive:tmpResult.param_speedPPMlive,
            config_MCmodel:tmpResult.config_MCmodel,
            config_780type:tmpResult.config_780type,
            config_780vsd:tmpResult.config_780vsd,
            config_linenumber:tmpResult.config_linenumber,
            config_dateinstall:tmpResult.config_dateinstall,
            config_PDS:tmpResult.config_PDS,
            recipe_flushsethours:tmpResult.recipe_flushsethours
        };

        var result = me.insertDBRecord(params);
}
catch(e){
    logger.error("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for state_allalarm - Exception "+e + " "+me.name);
}

logger.debug("TT_RTTFT_8600-1X DailyPackCounter Data Change subscription for state_allalarm - END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="Timer" source="postGres_1X_1hrTimer" sourceProperty=""><ServiceImplementation description="" handlerName="Script" name="Type.Thing:Entity.postGres_1X_1hrTimer:Event.Timer"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1x 1hr Subscription START "+me.name);
try {

var params = {
	assetID: me.name /* STRING */
};

// result: INFOTABLE
var result = Things["SEE_FC_PostGres_Database"].calculateKPIbyHour_POC(params);


    
} catch(err) {
logger.error("TT_RTTFT_8600-1x 1hr Subscription error "+err+" "+me.name);
}
  
logger.debug("TT_RTTFT_8600-1x 1hr Subscription END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription><Subscription enabled="true" eventName="Timer" source="postGres_1X_1minTimer" sourceProperty=""><ServiceImplementation description="" handlerName="Script" name="Type.Thing:Entity.postGres_1X_1minTimer:Event.Timer"><ConfigurationTables><ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><code><![CDATA[logger.debug("TT_RTTFT_8600-1X  - 1 min subscription STARTing "+me.name);
try {
var currentTime = Date.now();
var calPLCTimestamp = dateFormat(currentTime,"yyyy-MM-dd HH:mm:ss.SSS");
    var shiftNo; 
var shiftNoparams = {
	plcTime: calPLCTimestamp /* STRING */,
	assetID: me.name /* STRING */
};

// result: INFOTABLE
var shiftNoResult= Things["SEE_FC_PostGres_Database"].calculateShiftNo(shiftNoparams);
shiftNo = shiftNoResult.sp_vpp_getshiftnumber;
//    var shiftStartTimeParams = {
//	plcTime: calPLCTimestamp /* STRING */,
//	assetID: me.name /* STRING */,
//	sensorTableName: me.postgresSensorDaTable /* STRING */,
//	shiftNo: shiftNo /* STRING */
//};
//
//// result: INFOTABLE
//var shiftstartTimeResult= Things["SEE_FC_PostGres_Database"].calculateShiftStartTime(shiftStartTimeParams);
//me.shiftStrtTime =shiftstartTimeResult.sp_cognipro_calculate_shift_start_time;
    
var calcParams = {
	assetID: me.name /* STRING */
};

// result: INFOTABLE
var result = Things["SEE_FC_PostGres_Database"].calculateKPIbyMinute_POC(calcParams);
me.shiftNumber=shiftNo;
   
} catch(err) {
logger.error("TT_RTTFT_8600-1X - 1 min subscription Error message "+err +" " +me.name);
}    
logger.debug("TT_RTTFT_8600-1X  - 1 min subscription END "+me.name);]]></code></Row></Rows></ConfigurationTable></ConfigurationTables></ServiceImplementation></Subscription></Subscriptions></ThingShape><ImplementedShapes><ImplementedShape name="TS_8600-1X_CogniPro_Alarms" type="ThingShape"/><ImplementedShape name="IndustrialThingShape" type="ThingShape"/><ImplementedShape name="TS_8600-1X_CogniPro_Parameters" type="ThingShape"/><ImplementedShape name="TS_8600-1X_CogniPro_KPI" type="ThingShape"/></ImplementedShapes><SharedConfigurationTables><ConfigurationTable description="Shared Tunneling Destinations" isMultiRow="true" name="SharedTunnels" ordinal="1"><DataShape><FieldDefinitions><FieldDefinition aspect.friendlyName="Application Path" baseType="STRING" description="Location of the client app that will use this tunnel" name="appUri" ordinal="5"/><FieldDefinition aspect.friendlyName="Description" baseType="STRING" description="A description of the tunnel" name="description" ordinal="3"/><FieldDefinition aspect.friendlyName="Host" baseType="STRING" description="Host or IP that this tunnel will connect to at the edge" name="host" ordinal="1"/><FieldDefinition aspect.friendlyName="Name" baseType="STRING" description="Name of the tunnel" name="name" ordinal="0"/><FieldDefinition aspect.friendlyName="Number of Connects" baseType="NUMBER" description="The number of connections required to establish this tunnel" name="numConnects" ordinal="4"/><FieldDefinition aspect.friendlyName="Port" baseType="NUMBER" description="Port that this tunnel will connect to at the edge" name="port" ordinal="2"/><FieldDefinition aspect.friendlyName="Protocol" baseType="STRING" description="The protocol used over this tunnel" name="proto" ordinal="6"/></FieldDefinitions></DataShape><Rows/></ConfigurationTable><ConfigurationTable description="Shared Remote Tunneling Settings" isMultiRow="false" name="SharedTunnelSettings" ordinal="0"><DataShape><FieldDefinitions><FieldDefinition aspect.defaultValue="false" aspect.friendlyName="Enable Tunneling" baseType="BOOLEAN" description="Enable tunneling" name="enableTunneling" ordinal="0"/></FieldDefinitions></DataShape><Rows><Row><enableTunneling>false</enableTunneling></Row></Rows></ConfigurationTable></SharedConfigurationTables><InstanceDesignTimePermissions><Create/><Read/><Update/><Delete/><Metadata/></InstanceDesignTimePermissions><InstanceRunTimePermissions/><InstanceVisibilityPermissions><Visibility/></InstanceVisibilityPermissions><ConfigurationChanges><ConfigurationChange changeAction="CREATE" changeReason="header : valueStream : updated, name : updated, description : updated, documentationContent : updated&#10;" timestamp="2017-10-26T14:38:33.337Z" user="Brandon"/><ConfigurationChange changeAction="FORCEEDIT" changeReason="" timestamp="2017-10-27T19:54:37.775Z" user="Jennifer"/><ConfigurationChange changeAction="MODIFY" changeReason="header : tags : updated&#10;" timestamp="2017-10-27T19:56:40.751Z" user="Jennifer"/></ConfigurationChanges></ThingTemplate></ThingTemplates></Entities>